// <auto-generated />
using System;
using MES.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MES.Server.Migrations
{
    [DbContext(typeof(ProjectdbContext))]
    [Migration("20250609055210_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MES.Shared.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ListItems = "None",
                            Name = "Admin",
                            NormalizedName = "ADMIN",
                            ReadOnly = false
                        },
                        new
                        {
                            Id = 2,
                            ListItems = "None",
                            Name = "User",
                            NormalizedName = "USER",
                            ReadOnly = false
                        });
                });

            modelBuilder.Entity("MES.Shared.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalesUser")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PageNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Routes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedWorkCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MES.Shared.Entities.AppUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("MES.Shared.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipmentImageId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ShipmentImageId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("MES.Shared.Models.MESDelayReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DelayReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MESDelayReason");
                });

            modelBuilder.Entity("MES.Shared.Models.MESWorkcenters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MESWorkcenters");
                });

            modelBuilder.Entity("MES.Shared.Models.Materials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("MES.Shared.Models.NewBoxRequiredNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequiredNumberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewBoxRequiredNumbers");
                });

            modelBuilder.Entity("MES.Shared.Models.Other", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Others");
                });

            modelBuilder.Entity("MES.Shared.Models.Receiving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SelectedOption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Receivings");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.Filedata", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesAttachedFileId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SalesAttachedFileId");

                    b.ToTable("Filedata");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.FinalImagedata", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("FinalInspectionId")
                        .HasColumnType("int");

                    b.Property<string>("ImageFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FinalInspectionId");

                    b.ToTable("FinalImagedatas");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.FinalInspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinalInspections");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.FinalInspectionSaveData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AGNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPoNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DWGNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DelayReasonTracking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dressedwithnewbearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinalInspectionSubmitedByDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinalInspectionSubmiteddBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Finish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FluteDiameterFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FluteDiameterStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrindingEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GrindingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrindingSubmiteddBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectorComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectorSing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IstheRotorcleanStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IstheRotorcleanfinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalsOKStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalsOKfinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandWidthFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandWidthStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocknutThreadsFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocknutThreadsStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oktoship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefAngleFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefAngleStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefLand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialNoteComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPartWashFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPartWashStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIRStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIRfinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaperStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taperfinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToothFaceLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToothFaceRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisualChecks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockassemblyFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockassemblyStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("finalInspectionSaveDatas");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.Imagedata", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IncomingImageId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IncomingImageId");

                    b.ToTable("Imagedatas");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.IncomingImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomingImages");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.IncomingInspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ADDQTYdata")
                        .HasColumnType("int");

                    b.Property<int?>("AddQty")
                        .HasColumnType("int");

                    b.Property<string>("Aligned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedKnife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxReceivedWithSaddles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeramicSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYBasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYCenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Len")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualLabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequiredBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasticSleaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandBlasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirLeftJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirRightJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Top")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockAlignmentMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Welding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeldingNum")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomingInspections");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.IncomingInspectionFeedRolls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BJL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BJR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackPlatesL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackPlatesR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BearingPartNUmber")
                        .HasColumnType("int");

                    b.Property<string>("CentersL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedRollDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedRollSerialNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectedBY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocknutThreadsL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocknutThreadsR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivedWithEccentrics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SJL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SJR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMBC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMBL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMBR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMFL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMFR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomingInspectionFeedRollsdata");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.NewRotorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewRotorDataSSubmitBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NewRotorDataSubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlannedHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewRotorData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorDamageGrindingDataFromGrinding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddQty")
                        .HasColumnType("int");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aligned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedKnife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxReceivedWithSaddles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeramicSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GrindingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrindingdataSubmitedByDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrindingdataSubmiteddBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYBasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYCenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMoveoutsideoperation")
                        .HasColumnType("bit");

                    b.Property<string>("Left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Len")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualLabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasticSleaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandBlasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmitedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TirLeftJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirRightJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Top")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockAlignmentMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Welding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeldingNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorDamageGrindingDataFromGrinding");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorDamageGrindingSaveData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageGrindingSavedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DamageGrindingSavedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorDamageGrindingSaveData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorDamageGrindingSubmitedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddQty")
                        .HasColumnType("int");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aligned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedKnife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxReceivedWithSaddles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeramicSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageGrindingSubmitBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DamageGrindingSubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYBasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYCenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Len")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualLabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasticSleaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandBlasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmitedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TirLeftJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirRightJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Top")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockAlignmentMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Welding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeldingNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorDamageGrindingSubmitedData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorGrindingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalSalesComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DelayReasonTracking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GrindingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrindingdataSubmitedByDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrindingdataSubmiteddBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMoveoutsideoperation")
                        .HasColumnType("bit");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefLand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToothFaceLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToothFaceRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisualChecks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorGrindingData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorGrindingSavedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalSalesComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelayReasonTracking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GrindingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrindingdataSavedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrindingdataSavedByDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMoveoutsideoperation")
                        .HasColumnType("bit");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefLand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToothFaceLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToothFaceRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisualChecks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorGrindingSavedData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorGrindingSecondaryWorkCentersData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GrindingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrindingdataSubmitedByDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrindingdataSubmiteddBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMoveoutsideoperation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSecondaryWorkCenters")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryWorkCenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorGrindingSecondaryWorkCentersData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorIncominInspectionSavedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ADDQTYdata")
                        .HasColumnType("int");

                    b.Property<int?>("AddQty")
                        .HasColumnType("int");

                    b.Property<string>("Aligned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedKnife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxReceivedWithSaddles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeramicSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYBasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYCenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Len")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualLabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequiredBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasticSleaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandBlasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SavedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirLeftJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirRightJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Top")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockAlignmentMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Welding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeldingNum")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("rotorIncominInspectionSavedDatas");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorProductionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddQty")
                        .HasColumnType("int");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aligned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedKnife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxReceivedWithSaddles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeramicSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYBasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYCenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Len")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualLabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasticSleaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionSubmitBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProductionSubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandBlasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmitedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TirLeftJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirRightJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Top")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockAlignmentMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Welding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeldingNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorProductionData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorProductionSavedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddQty")
                        .HasColumnType("int");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aligned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedKnife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxReceivedWithSaddles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeramicSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYBasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYCenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Len")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualLabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasticSleaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionSavedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProductionSavedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandBlasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmitedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TirLeftJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirRightJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Top")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockAlignmentMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Welding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeldingNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorProductionSavedData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorSalesClearance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalWSalesComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Inspected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WSalesSubmitedByDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WSalesSubmiteddBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorSalesClearance");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorSalesData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ADDQTYdata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddQty")
                        .HasColumnType("int");

                    b.Property<string>("Aligned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedKnife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxReceivedWithSaddles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeramicSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYBasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYCenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Len")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualLabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequiredBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlannedHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasticSleaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandBlasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmitedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TirLeftJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirRightJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Top")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockAlignmentMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Welding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeldingNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorSalesData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorSalesSavedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ADDQTYdata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddQty")
                        .HasColumnType("int");

                    b.Property<string>("Aligned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearingSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedKnife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxReceivedWithSaddles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeramicSeals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYBasicSharpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYCenterGrinding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Len")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualLabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewBoxRequiredBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlannedHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasticSleaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandBlasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SavedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SavedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TirLeftJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirRightJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Top")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockAlignmentMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Welding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeldingNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorSalesSavedData");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorShipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalWSalesComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Inspected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipSubmitedByDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipSubmiteddBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorShipping");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.RotorsFinalInspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AGNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPoNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DWGNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DelayReasonTracking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dressedwithnewbearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinalInspectionSubmitedByDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinalInspectionSubmiteddBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FluteDiameterFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FluteDiameterStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrindingEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GrindingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrindingSubmiteddBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectorComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectorSing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IstheRotorcleanStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IstheRotorcleanfinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalsOKStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalsOKfinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandWidthFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandWidthStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocknutThreadsFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocknutThreadsStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oktoship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Received")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefAngleFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefAngleStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefLand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialNoteComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPartWashFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPartWashStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIRStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIRfinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaperStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taperfinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToothFaceLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToothFaceRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Users")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisualChecks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockassemblyFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedgelockassemblyStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotorsFinalInspections");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.SalesAttachedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalesAttachedFile");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.SaveEnterdRotorGrindingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalSalesComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvancedSharpingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentersRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImportance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelayReasonTracking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GrindingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrindingdataSavedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrindingdataSavedByDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefLand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorCategorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsDiaRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToothFaceLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToothFaceRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisualChecks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workcenters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SaveEnterdRotorGrindingDetails");
                });

            modelBuilder.Entity("MES.Shared.Models.RotorsStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotorsStyleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("rotorsStyles");
                });

            modelBuilder.Entity("MES.Shared.Models.SaddlepartNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaddlePartNumberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("saddlepartNumbers");
                });

            modelBuilder.Entity("MES.Shared.Models.ShipmentImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShipmentImage");
                });

            modelBuilder.Entity("MES.Shared.Models.Typesdetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("types");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MES.Shared.Entities.AppUserRole", b =>
                {
                    b.HasOne("MES.Shared.Entities.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MES.Shared.Entities.AppUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MES.Shared.Models.Image", b =>
                {
                    b.HasOne("MES.Shared.Models.ShipmentImage", "ShipmentImage")
                        .WithMany("Images")
                        .HasForeignKey("ShipmentImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipmentImage");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.Filedata", b =>
                {
                    b.HasOne("MES.Shared.Models.Rotors.SalesAttachedFile", "SalesAttachedFile")
                        .WithMany("File")
                        .HasForeignKey("SalesAttachedFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesAttachedFile");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.FinalImagedata", b =>
                {
                    b.HasOne("MES.Shared.Models.Rotors.FinalInspection", "FinalInspection")
                        .WithMany("Images")
                        .HasForeignKey("FinalInspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinalInspection");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.Imagedata", b =>
                {
                    b.HasOne("MES.Shared.Models.Rotors.IncomingImages", "IncomingImages")
                        .WithMany("Images")
                        .HasForeignKey("IncomingImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncomingImages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("MES.Shared.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("MES.Shared.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("MES.Shared.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("MES.Shared.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MES.Shared.Entities.AppRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MES.Shared.Entities.AppUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.FinalInspection", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.IncomingImages", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("MES.Shared.Models.Rotors.SalesAttachedFile", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("MES.Shared.Models.ShipmentImage", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
