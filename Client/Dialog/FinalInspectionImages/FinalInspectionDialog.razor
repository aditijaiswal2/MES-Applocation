@using MES.Client.Pages.Admin
@using MES.Client.Utitlity
@using MES.Shared.Models
@using MES.Shared;
@using Newtonsoft.Json
@using System.Text
@using MES.Shared.DTOs
@using MES.Shared.Entities
@using System.Net
@using System.ComponentModel.DataAnnotations;
 @using MES.Shared.Models.Rotors

@inject ISnackbar Snackbar
@inject HttpClient HttpClient
@inject IDialogCompletionService CompletionService
 @inject IHttpClientFactory _httpClient
@inject NavigationManager Navigation



<div>
    <MudDialog MaxWidth="MaxWidth.ExtraLarge" FullWidth="true">
        
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.AcUnit" Class="mr-3 mb-n1" />
                SERVICE ROTOR FINAL INSPECTION REPORT
            </MudText>
        </TitleContent>
        <DialogContent>

             <MudForm Class="mt-4 p-4 w-100" id="printForm-section">
                        <MudCardContent>

                            <MudGrid Class="w-100">

                                    <MudGrid Spacing="3">

                                        <MudItem xs="12" md="6">
                                <MudTextField Label="Sales Order" @bind-Value="InspectionData.SalesOrderNumber" FullWidth="true" Variant="Variant.Outlined" ReadOnly />
                                        </MudItem>

                                        <MudItem xs="12" md="6">
                                <MudTextField Label="Customer PO#" @bind-Value="FinalInspectionData.CustomerPoNum" FullWidth="true" Variant="Variant.Outlined" />
                                        </MudItem>
                                     
                                </MudGrid>

                            <MudGrid Spacing="3">

                                <MudItem xs="12" md="6">
                                <MudTextField Label="Customer" @bind-Value="InspectionData.Customer" FullWidth="true" Variant="Variant.Outlined" ReadOnly />
                                </MudItem>

                                <MudItem xs="12" md="6">
                                <MudTextField Label="Dwg#" @bind-Value="FinalInspectionData.DWGNum" FullWidth="true" Variant="Variant.Outlined"/>
                                </MudItem>

                            </MudGrid>

                        <MudGrid Spacing="3">

                            <MudItem xs="12" md="4">
                                <MudTextField Label="Description" @bind-Value="FinalInspectionData.Description" FullWidth="true" Variant="Variant.Outlined"/>
                            </MudItem>

                            <MudItem xs="12" md="4">
                                <MudTextField Label="AG#" @bind-Value="FinalInspectionData.AGNum" FullWidth="true" Variant="Variant.Outlined"/>
                            </MudItem>

                            <MudItem xs="12" md="4">
                                <MudTextField Label="Material" @bind-Value="InspectionData.Materials" FullWidth="true" Variant="Variant.Outlined" ReadOnly />
                            </MudItem>

                        </MudGrid>

                        <MudGrid Spacing="3">

                            <MudItem xs="12" md="12">
                                <MudTextField Label="Special notes / comments" @bind-Value="FinalInspectionData.SpecialNoteComment" FullWidth="true" Variant="Variant.Outlined"/>
                            </MudItem>
                        </MudGrid>                       

                        <MudGrid Spacing="3">

                            <MudItem xs="12" md="12">
                                <MudTextField Label="Dressed With New Bearings" @bind-Value="FinalInspectionData.Dressedwithnewbearing" FullWidth="true" Variant="Variant.Outlined"/>
                            </MudItem>
                        </MudGrid>

                            </MudGrid>
                        </MudCardContent>
                <!-- Table Section -->
                <MudGrid Spacing="3" Class="mt-4">
                    <MudTable T="RotorsFinalInspection" Items="@tableData" Elevation="1">
                        <HeaderContent>
                            <MudTh>Description</MudTh>
                            <MudTh>Start</MudTh>
                            <MudTh>Finish</MudTh>
                            <MudTh>Date</MudTh>
                            <MudTh>Name</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Description">@context.Description</MudTd>
                            <MudTd DataLabel="Start">
                                <MudTextField @bind-Value="context.Start"  />
                            </MudTd>
                            <MudTd DataLabel="Finish">
                                <MudTextField @bind-Value="context.Finish" />
                            </MudTd>
                            <MudTd DataLabel="Date">
                                <MudDatePicker @bind-Date="context.Date"/>
                            </MudTd>
                            <MudTd DataLabel="Name">
                                <MudTextField @bind-Value="context.Name"/>
                            </MudTd>
                        </RowTemplate>
                    </MudTable>

                </MudGrid>

                  <MudCardContent>

                            <MudGrid Class="w-100">

                                    <MudGrid Spacing="3">
                                        <MudItem md="6" xs="12" class="outlined-box pa-2">
                                            <MudText Typo="Typo.h6" Color="Color.Primary">Inspector Signature</MudText>
                                <MudTextField @bind-Value="FinalInspectionData.InspectorSing" Variant="Variant.Text" />
                                        </MudItem>

                            <MudItem md="6" xs="12" class="outlined-box pa-2">
                                <MudText Typo="Typo.h6" Color="Color.Primary">Comments</MudText>
                                <MudTextField @bind-Value="FinalInspectionData.InspectorComments" Variant="Variant.Text" />
                            </MudItem>

                            <MudItem md="6" xs="12" class="outlined-box pa-2">
                                <MudText Typo="Typo.h6" Color="Color.Primary">OK TO SHIP</MudText>
                                <MudTextField @bind-Value="FinalInspectionData.Oktoship" Variant="Variant.Text" />
                            </MudItem>                                      

                                </MudGrid>
                            </MudGrid>
                  </MudCardContent>

                <MudGrid Spacing="3" Justify="Justify.Center" AlignItems="AlignItems.Center">
                    <MudItem xs="12" md="6" Class="text-center">
                        <h5>For New Rotors and Spare Parts</h5>
                        <p Class="text-center">Please Call</p>
                        <h6>1.800.844.2927 or 330.677.2225</h6>
                        <p>8:00 am - 5:00 pm, M-F</p>
                    </MudItem>
                </MudGrid>

              </MudForm>
        </DialogContent>
        <DialogActions>
            <MudButton Class="mr-4 mb-2" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary" OnClick="Add">Add</MudButton>
            <MudButton Variant="Variant.Filled" Size="Size.Small" Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
</div>

@code {
    [Parameter]
    public RotorGrindingData InspectionData { get; set; }

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    private List<RotorsFinalInspection> tableData = new();

  //  private RotorsFinalInspection FinalInspectionData;
    private RotorsFinalInspection FinalInspectionData = new RotorsFinalInspection();

    private IEnumerable<AppRole> appRoles = new List<AppRole>();

    private void Cancel()
    {
        MudDialog?.Cancel();
    }

    private async Task Add()
    {
        var finalInspectionDataModel = new RotorFinalInspectionDTO
            {
                InspectionData = InspectionData,
                FinalInspectionData = FinalInspectionData,
                TableData = tableData
            };

        MudDialog?.Close(DialogResult.Ok(finalInspectionDataModel));
    }


    protected override async Task OnInitializedAsync()
    {
        tableData = new List<RotorsFinalInspection>
    {
        new RotorsFinalInspection { Description = "Flute Diameter", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "Land Width", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "T.I.R", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "Taper", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "Locknut Threads", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "Is the Rotor clean?", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "Relief Angle", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "Journals O.K.?", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "Wedgelock assembly", Start = "", Finish = "", Date = DateTime.Now, Name = "" },
        new RotorsFinalInspection { Description = "Special Part Wash (if Applicable )", Start = "", Finish = "", Date = DateTime.Now, Name = "" }
 };

        await LoadRoles();

        // get Work Centers
        HttpClient = _httpClient.CreateClient("ITS.ServerAPI");
        var workcenterResponse = await HttpClient.GetAsync(ApiConstants.GetMESWorkcenters);

        if (workcenterResponse.IsSuccessStatusCode)
        {
            var locationResult = await workcenterResponse.Content.ReadFromJsonAsync<List<MESWorkcenters>>();

           
        }
    }

    private async Task LoadRoles()
    {
        try
        {
            Snackbar.Clear();
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;

            //var roleResponse = await HttpClient.GetAsync("https://localhost:7006/api/Role/getrole");
            HttpClient = _httpClient.CreateClient("ITS.ServerAPI");
            var roleResponse = await HttpClient.GetAsync(ApiConstants.GetRole);
            if (roleResponse.IsSuccessStatusCode)
            {
                var roleResult = await roleResponse.Content.ReadFromJsonAsync<IEnumerable<AppRole>>();
                if (roleResult != null)
                {
                    appRoles = roleResult.ToList();
                }
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error Occured {ex.Message}", Severity.Warning);
        }
    }


}
