@using MES.Client.Utitlity
@using MES.Shared.Models
@using System.ComponentModel.DataAnnotations;
@using MES.Shared.Entities
@using MES.Shared.DTOs


@inject ISnackbar Snackbar
@inject HttpClient HttpClient
@inject IDialogCompletionService CompletionService
 @inject IHttpClientFactory _httpClient

<div>
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.PersonRemove" Class="mr-3 mb-n1" />
                Delete User ?
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField Label="User Name" @bind-Value="@appUsers.UserName" Variant="Variant.Outlined" Class="mb-4" ReadOnly />
             <MudTextField Label="Name" @bind-Value="@appUsers.Name" Variant="Variant.Outlined" Class="mb-4" ReadOnly />
             <MudTextField Label="User Code" @bind-Value="@appUsers.UserCode" Variant="Variant.Outlined" Class="mb-4" ReadOnly />
             <MudTextField Label="Email" @bind-Value="@appUsers.Email" Variant="Variant.Outlined" Class="mb-4" ReadOnly />
             @* <MudTextField Label="Role" @bind-Value="@UserRoles" Variant="Variant.Outlined" Class="mb-4" ReadOnly /> *@
             <MudTextField Label="Pages Privileges" @bind-Value="@appUsers.PageNames" Variant="Variant.Outlined" Class="mb-4" ReadOnly />
         </DialogContent>
         <DialogActions>
             <MudButton Class="mr-4 mb-2" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary" OnClick="Delete">Delete</MudButton>
             @* <MudButton Variant="Variant.Filled" Size="Size.Small" Color="Color.Error" OnClick="Cancel">Cancel</MudButton> *@
         </DialogActions>
     </MudDialog>
 </div>

 @code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Parameter] public AppUser appUsers { get; set; } = new AppUser();
    [Parameter] public string UserRoles { get; set; }

    public UserAddDto user = new UserAddDto();

    private async Task Delete()
    {
        try
        {
            Snackbar.Clear();
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;

            //HttpResponseMessage response = await HttpClient.DeleteAsync($"https://localhost:7006/api/Users/{appUsers.UserName}");
            HttpClient = _httpClient.CreateClient("ITS.ServerAPI");
            HttpResponseMessage response = await HttpClient.DeleteAsync($"{ApiConstants.DeleteUserByUsername}/{appUsers.UserName}");

            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add("User deleted successfully.", Severity.Success);
                CompletionService.IsCompleted = true;
            }
            else
            {
                Snackbar.Add($"Failed to User location,Try again ! Status code: {response.StatusCode}", Severity.Error);
                CompletionService.IsCompleted = false;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error Occured {ex.Message}", Severity.Warning);
        }

        MudDialog?.Close();
    }

    private void Cancel()
    {
        MudDialog?.Cancel();
    }
}
