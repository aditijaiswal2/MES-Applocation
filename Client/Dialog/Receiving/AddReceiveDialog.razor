@using MES.Client.Utitlity
@using MES.Shared.Models
@using MES.Shared;

@using System.Text
@using MES.Shared.DTOs
@using MES.Shared.Entities
@using System.Net
@using System.ComponentModel.DataAnnotations;

@inject HttpClient Http
@inject ISnackbar Snackbar
@inject HttpClient HttpClient
@inject IDialogCompletionService CompletionService

<MudContainer>
    <MudCard>
        <MudCardContent>
            <MudGrid>

                <MudItem xs="12" Class="mb-2">
                    <MudSelect T="string" Label="select" Variant="Variant.Outlined" @bind-Value="SelectedOption">
                        @foreach (var selecttab in selectedTab)
                        {
                            <MudSelectItem Value="@selecttab">@selecttab</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" Class="mb-2">
                    <MudTextField Label="Customer" Variant="Variant.Outlined" @bind-Value="Customer" FullWidth="true" Style="margin-top:6px;" />

                </MudItem>
                <MudItem xs="12">
                    <MudButton OnClick="SubmitForm" Color="Color.Primary">Submit</MudButton>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {

    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Parameter] public string Date { get; set; }
    [Parameter] public string SerialNumber { get; set; }
    [Parameter] public string Customer { get; set; }
    [Parameter] public EventCallback<Receiving> OnReceiveAdded { get; set; }
    private string SelectedOption { get; set; } = "";


    private List<string> selectedTab = new List<string>
    {
         "Rotor/Feed rolls"
        // "Pump Repair",
        // "System Assembly",
        // "Pelletizer Assembly",
        // "Pulverizer Assembly",
        // "Ettlinger  Assembly"
    };

    protected override void OnParametersSet()
    {
        if (string.IsNullOrWhiteSpace(Date))
            Date = DateTime.Today.ToString("yyyy-MM-dd");

        if (string.IsNullOrWhiteSpace(SerialNumber))
            SerialNumber = "MES00001";
    }

    private void Cancel()
    {
        MudDialog?.Cancel();
    }


    private async Task SubmitForm()
    {
        Snackbar.Clear();
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;

        var data = new Receiving
            {
                Date = DateTime.Parse(Date),
                SerialNumber = SerialNumber,
                SelectedOption = SelectedOption,
                Customer = Customer
            };

        try
        {
           // var response = await Http.PostAsJsonAsync("https://localhost:7172/api/ReceivingData/addrd", data);
            var response = await Http.PostAsJsonAsync(ApiConstants.AddReceiving, data);

            if (response.IsSuccessStatusCode)
            {
                var createdData = await response.Content.ReadFromJsonAsync<Receiving>();

                Snackbar.Add("Data submitted successfully!", Severity.Success);

                // Notify the parent component (Index.razor) to update the table
                await OnReceiveAdded.InvokeAsync(createdData);

                MudDialog?.Cancel();
            }
            else
            {
                Snackbar.Add("Error submitting data.", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }
}
